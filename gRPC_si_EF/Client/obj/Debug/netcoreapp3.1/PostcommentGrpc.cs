// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/postcomment.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  public static partial class PostComment
  {
    static readonly string __ServiceName = "PostComment";

    static readonly grpc::Marshaller<global::GrpcService.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.PostsList> __Marshaller_PostsList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.PostsList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.PostModel> __Marshaller_PostModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.PostModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.ResultClient> __Marshaller_ResultClient = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.ResultClient.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.InputClient> __Marshaller_InputClient = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.InputClient.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcService.CommentModel> __Marshaller_CommentModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcService.CommentModel.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcService.Empty, global::GrpcService.PostsList> __Method_GetAllPosts = new grpc::Method<global::GrpcService.Empty, global::GrpcService.PostsList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPosts",
        __Marshaller_Empty,
        __Marshaller_PostsList);

    static readonly grpc::Method<global::GrpcService.PostModel, global::GrpcService.ResultClient> __Method_AddPost = new grpc::Method<global::GrpcService.PostModel, global::GrpcService.ResultClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_PostModel,
        __Marshaller_ResultClient);

    static readonly grpc::Method<global::GrpcService.PostModel, global::GrpcService.PostModel> __Method_UpdatePost = new grpc::Method<global::GrpcService.PostModel, global::GrpcService.PostModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_PostModel,
        __Marshaller_PostModel);

    static readonly grpc::Method<global::GrpcService.InputClient, global::GrpcService.ResultClient> __Method_DeletePost = new grpc::Method<global::GrpcService.InputClient, global::GrpcService.ResultClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_InputClient,
        __Marshaller_ResultClient);

    static readonly grpc::Method<global::GrpcService.InputClient, global::GrpcService.PostModel> __Method_GetByIdPost = new grpc::Method<global::GrpcService.InputClient, global::GrpcService.PostModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByIdPost",
        __Marshaller_InputClient,
        __Marshaller_PostModel);

    static readonly grpc::Method<global::GrpcService.CommentModel, global::GrpcService.ResultClient> __Method_AddComment = new grpc::Method<global::GrpcService.CommentModel, global::GrpcService.ResultClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_CommentModel,
        __Marshaller_ResultClient);

    static readonly grpc::Method<global::GrpcService.CommentModel, global::GrpcService.CommentModel> __Method_UpdateComment = new grpc::Method<global::GrpcService.CommentModel, global::GrpcService.CommentModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_CommentModel,
        __Marshaller_CommentModel);

    static readonly grpc::Method<global::GrpcService.InputClient, global::GrpcService.CommentModel> __Method_GetCommentById = new grpc::Method<global::GrpcService.InputClient, global::GrpcService.CommentModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_InputClient,
        __Marshaller_CommentModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.PostcommentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PostComment</summary>
    public partial class PostCommentClient : grpc::ClientBase<PostCommentClient>
    {
      /// <summary>Creates a new client for PostComment</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PostCommentClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PostComment that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PostCommentClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PostCommentClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PostCommentClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcService.PostsList GetAllPosts(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.PostsList GetAllPosts(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllPosts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostsList> GetAllPostsAsync(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPostsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostsList> GetAllPostsAsync(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllPosts, null, options, request);
      }
      public virtual global::GrpcService.ResultClient AddPost(global::GrpcService.PostModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.ResultClient AddPost(global::GrpcService.PostModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> AddPostAsync(global::GrpcService.PostModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> AddPostAsync(global::GrpcService.PostModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual global::GrpcService.PostModel UpdatePost(global::GrpcService.PostModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.PostModel UpdatePost(global::GrpcService.PostModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostModel> UpdatePostAsync(global::GrpcService.PostModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostModel> UpdatePostAsync(global::GrpcService.PostModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePost, null, options, request);
      }
      public virtual global::GrpcService.ResultClient DeletePost(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.ResultClient DeletePost(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> DeletePostAsync(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> DeletePostAsync(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual global::GrpcService.PostModel GetByIdPost(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdPost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.PostModel GetByIdPost(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByIdPost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostModel> GetByIdPostAsync(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdPostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.PostModel> GetByIdPostAsync(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByIdPost, null, options, request);
      }
      public virtual global::GrpcService.ResultClient AddComment(global::GrpcService.CommentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.ResultClient AddComment(global::GrpcService.CommentModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> AddCommentAsync(global::GrpcService.CommentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.ResultClient> AddCommentAsync(global::GrpcService.CommentModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual global::GrpcService.CommentModel UpdateComment(global::GrpcService.CommentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.CommentModel UpdateComment(global::GrpcService.CommentModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.CommentModel> UpdateCommentAsync(global::GrpcService.CommentModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.CommentModel> UpdateCommentAsync(global::GrpcService.CommentModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual global::GrpcService.CommentModel GetCommentById(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcService.CommentModel GetCommentById(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCommentById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.CommentModel> GetCommentByIdAsync(global::GrpcService.InputClient request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcService.CommentModel> GetCommentByIdAsync(global::GrpcService.InputClient request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCommentById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PostCommentClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PostCommentClient(configuration);
      }
    }

  }
}
#endregion
